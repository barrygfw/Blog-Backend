<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="cn.emrys.springboot.mapper.ArticleMapper">
    <select id="all" resultType="cn.emrys.springboot.entity.Article">
        select a.id,a.title,a.publishDate,a.editTime,a.state,u.user_name,c.cateName
        from blog_article a,blog_user u,blog_category c where a.uid=u.id and a.cid=c.id
        <if test="state!=-1">
            and a.state=#{state}
        </if>
        <if test="uid!=0">
            and a.uid=#{uid}
        </if>
        <if test="cid!=0">
            and a.cid=#{cid}
        </if>
        <if test="keywords!=null">
            AND title LIKE concat('%',#{keywords},'%')
        </if>
        ORDER BY a.editTime DESC limit #{start},#{end}
    </select>

    <select id="allCount" resultType="int">
        SELECT count(*) FROM blog_article
        <where>
            <if test="state!=-1">
                AND state=#{state}
            </if>
            <if test="uid!=0">
                AND uid=#{uid}
            </if>
            <if test="cid!=0">
                and a.cid=#{cid}
            </if>
            <if test="keywords!=null">
                AND title LIKE concat('%',#{keywords},'%')
            </if>
        </where>
    </select>

    <select id="findById" resultType="cn.emrys.springboot.entity.Article" parameterType="int">
        select a.*,u.user_name,c.cateName from blog_article a,blog_user u,blog_category c
        where a.uid=u.id and a.cid=c.id and a.id=#{id}
    </select>

    <update id="update" parameterType="cn.emrys.springboot.entity.Article">
        update blog_article set cid = #{cid}, htmlContent = #{htmlContent}, mdContent = #{mdContent}, state = #{state}, title = #{title}, editTime = #{editTime}
        where id = #{id}
    </update>

    <insert id="create" parameterType="cn.emrys.springboot.entity.Article">
        insert into blog_article (`title`,`mdContent`,`htmlContent`,`cid`,`uid`,`publishDate`,`editTime`,`state`)
        value (#{title},#{mdContent},#{htmlContent},#{cid},#{uid},#{publishDate},#{editTime},#{state})
    </insert>

    <update id="recycle" parameterType="int">
        update blog_article set state = 2 where id = #{id}
    </update>

    <delete id="delete" parameterType="int">
        delete from blog_article where id = #{id}
    </delete>
    
    <select id="allByCateId" parameterType="int" resultType="cn.emrys.springboot.entity.Article">
        select a.id,a.title,a.publishDate,a.editTime,a.state,u.user_name,c.cateName
        from blog_article a,blog_user u,blog_category c where a.uid=u.id and a.cid=c.id
        <if test="state!=-1">
            and a.state=#{state}
        </if>
        <if test="uid!=0">
            and a.uid=#{uid}
        </if>
        <if test="keywords!=null">
            AND title LIKE concat('%',#{keywords},'%')
        </if>
        ORDER BY a.editTime DESC limit #{start},#{end}
    </select>
</mapper>